{"version":3,"sources":["Redux/users-reducer.js","Components/Profile/Profile.module.css","Components/Common/Preloader/Preloader.module.css","Components/News/News.module.css","Components/Settings/Settings.module.css","Components/api/api.js","Components/NavBar/NavBar.module.css","Components/Dialogs/Dialogs.module.css","serviceWorker.js","Redux/profile-reducer.js","Redux/dialogs-reducer.js","Redux/sideBar-reducer.js","Redux/auth-reducer.js","Redux/app-reducer.js","Redux/redux-store.js","Components/Header/Header.js","Components/Header/HeaderContainer.js","Components/NavBar/NavBar.js","Components/Profile/ProfileInfo/StatusProfileHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.js","Components/Profile/MyPosts/Post/Post.js","Components/utils/validator.js","Components/Common/FormsControls/FormsControls.js","Components/Profile/MyPosts/MyPosts.js","Components/Profile/MyPosts/MyPostsContainer.js","Components/Profile/Profile.js","Components/News/News.js","Components/Settings/Settings.js","Components/Dialogs/DialogItem/DialogItem.js","Components/Dialogs/Message/Message.js","Components/Dialogs/Dialogs.js","Components/hoc/withAuthRedirect.jsx","Components/Dialogs/DialogsContainer.js","Components/Login/login.jsx","Components/hoc/withSuspense.jsx","App.js","index.js","Components/Common/FormsControls/renderedField.module.css","Components/Common/Preloader/preloader.jsx","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Header/Header.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css"],"names":["initialState","users","currentPage","totalUsersCount","pageSize","loading","usersIdfollowingProgress","setCurrentPage","pageNumber","type","isFetching","followingInProgres","userFollowingProgressId","getUsers","dispatch","a","usersAPI","response","totalUsers","data","totalCount","items","unfollow","userId","deleteUsers","then","resultCode","unfollowSuccess","follow","postUsers","followSuccess","usersReducer","state","action","map","u","id","followed","filter","uId","module","exports","instance","axios","withCredentials","baseURL","headers","size","get","delete","post","getProfile","console","warn","profileAPI","authMe","authAPI","logIn","email","password","rememberMe","logOut","getStatus","updateStatus","status","put","Boolean","window","location","hostname","match","postData","message","likesCount","profile","profileReducer","Date","now","newPostText","i","postId","dialogsData","name","messagesData","dialogsReducer","newMessage","newMessageBody","sideBarReducer","login","isAuth","setAuthMeData","setAuthUserData","authReducer","initial","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Header","props","className","s","header","alt","txt","loginBlock","onClick","logout","to","HeaderContainer","this","React","Component","connect","NavBar","navbar","itemMenu","item","activeClassName","active","StatusProfileHooks","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onBlur","autoFocus","onChange","e","currentTarget","value","ProfileInfo","src","photos","large","fullName","Post","ava","required","undefined","maxLengthCreator","maxLength","length","FormControl","input","meta","touched","error","formControl","children","Textarea","restProps","placeholder","label","Input","maxLength10","PostReduxForm","reduxForm","onSubmit","handleSubmit","Field","component","validate","btn","MyPosts","postElements","reverse","key","profileblock","formData","addPostAC","posts","MyPostsContainer","Profilecontainer","params","authorizedUserId","history","push","setUserProfile","objectForMapDispatch","updateMyStatus","withRouter","News","Settings","DialogItem","dialog","Message","maxLength15","AddMessageFormRedux","textarea","sendMessage","Dialogs","dialogsElement","messagesElements","dialogs","dialogsItems","messages","sendMessageBlock","sendMessageAC","mapStateToProps","withAuthRedirect","RedirectComponent","LoginReduxForm","htmlFor","commonErrorLoginForm","stopSubmit","_error","withSuspense","fallback","UsersContainerConnect","lazy","App","initApp","path","render","Profile","DialogsContainer","promise","Promise","all","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","Preloader","ldsRing"],"mappings":"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","file":"static/js/main.6af6c9f8.chunk.js","sourcesContent":["import {usersAPI} from '../Components/api/api'\n\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst IS_FETCHING = 'IS_FETCHING';\nconst FOLLOWING_PROGRESS = 'FOLLOWING_PROGRESS';\n\n//at first our state will be empty and we get respons from server and after that it will\n//be set this state\nlet initialState = {\n    users: [ ],\n    currentPage: 1,\n    totalUsersCount: 0,\n    pageSize: 15,\n    loading: false,\n    usersIdfollowingProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true}\n                    }\n                    return u;\n                })\n            };\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false}\n                    }\n                    return u;\n                })\n            };\n        case SET_USERS:\n            return {\n                ...state,\n                users: [...action.users]\n            };\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.pageNumber\n            };\n        case SET_TOTAL_USERS_COUNT:\n            return {\n                ...state,\n                totalUsersCount: action.totalUsers\n            };\n        case IS_FETCHING:\n            return {\n                ...state,\n                loading: action.loading\n            };\n            case FOLLOWING_PROGRESS:\n                return {\n                    ...state,\n                    usersIdfollowingProgress: action.isFetching\n                    ? [...state.usersIdfollowingProgress, action.userFollowingProgressId]\n                    : state.usersIdfollowingProgress.filter(uId => uId !== action.userFollowingProgressId)\n                }\n        default:\n            return state;\n\n    }\n};\n\n//Action Creators\n\nconst followSuccess = (userId) => ({type: FOLLOW, userId});\nconst unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\nconst setUsers = (users) => ({type: SET_USERS, users});\nexport const setCurrentPage = (pageNumber) => ({type: SET_CURRENT_PAGE, pageNumber});\nconst setTotalUsersCount = (totalUsers) => ({type: SET_TOTAL_USERS_COUNT, totalUsers});\nconst isFetching = (loading) => ({type: IS_FETCHING, loading});\nconst followingInProgres = (userFollowingProgressId, isFetching) => ({type: FOLLOWING_PROGRESS,\n     userFollowingProgressId, isFetching});\n\n//Thunk\n\nexport const getUsers = (pageNumber, pageSize) => {\n    return async (dispatch) => {\n        dispatch(isFetching(true));\n        dispatch(setCurrentPage(pageNumber));\n           let response = await usersAPI.getUsers(pageNumber, pageSize);\n            \n                    dispatch(isFetching(false));\n                    dispatch(setTotalUsersCount(response.data.totalCount));\n                    dispatch(setUsers(response.data.items));\n                \n    }     \n};\nexport const unfollow = (userId) => {\n    return (dispatch) => {\n        dispatch(followingInProgres(userId, true));\n        usersAPI.deleteUsers(userId).then((response) => {\n            dispatch(followingInProgres(userId, false));\n          if (response.data.resultCode === 0) {\n            dispatch(unfollowSuccess(userId));\n          }\n        });\n      }\n    };\n    export const follow = (userId) => {\n        return (dispatch) => {\n            dispatch(followingInProgres(userId, true));\n          usersAPI.postUsers(userId).then((response) => {\n            dispatch(followingInProgres(userId, false));\n            if (response.data.resultCode === 0) {\n                dispatch(followSuccess(userId));\n            }\n          });\n          }\n        };\n\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2SlMH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsRing\":\"Preloader_ldsRing__2K0f0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"News_item__XN5dc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Settings_item__Smc9y\"};","import * as axios from 'axios';\n\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n  headers: {\n    'API-KEY': '16b61340-e1d0-42ea-b3ed-4d908888b3c3',\n  },\n});\n\nexport const usersAPI = {\n  getUsers(currentPage, size) {\n    return instance.get(`users?page=${currentPage}&count=${size}`);\n  },\n  deleteUsers(userId) {\n    return instance.delete(`follow/${userId}`);\n  },\n  postUsers(userId) {\n    return instance.post(`follow/${userId}`);\n  },\n  getProfile(userId) {\n    console.warn('Obsolete method. Please, use profileAPI.getProfile');\n    return profileAPI.getProfile(userId);\n  },\n  authMe() {\n    return instance.get(`auth/me`);\n  },\n};\n\nexport const authAPI = {\n  authMe() {\n    return instance.get(`auth/me`);\n  },\n  logIn(email, password, rememberMe) {\n    return instance.post(`auth/login`, {email, password, rememberMe})\n  },\n  logOut() {\n    return instance.delete(`auth/login`);\n  }\n}\n\nexport const profileAPI = {\n  getProfile(userId) {\n    return instance.get(`profile/` + userId);\n  },\n  getStatus(userId) { //users`s status \n    return instance.get(`profile/status/` + userId);\n  },\n  updateStatus(status) { //my status, id is in the cookie\n    return instance.put(`profile/status/`, {\n      status: status\n    })\n  }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__18-NA\",\"itemMenu\":\"NavBar_itemMenu__3Ay3Y\",\"active\":\"NavBar_active__1VeY1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1rZ3k\",\"dialogsItems\":\"Dialogs_dialogsItems__2cvy3\",\"messages\":\"Dialogs_messages__285JR\",\"dialog\":\"Dialogs_dialog__3uLyt\",\"textarea\":\"Dialogs_textarea__2elep\",\"sendMessage\":\"Dialogs_sendMessage__1OweF\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Components is cached for offline use.\" message.\n              console.log('Components is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { usersAPI, profileAPI } from '../Components/api/api';\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst UPDATE_MY_STATUS = 'UPDATE_MY_STATUS';\nconst DELETE_POST = 'DELETE_POST';\n\nlet initialState = {\n  // app\n  postData: [\n    { id: 1, message: 'How are you?', likesCount: '12' },\n    { id: 2, message: 'See you!', likesCount: '8' },\n    { id: 3, message: 'Hello!', likesCount: '1' },\n  ],\n  // back\n  profile: null,\n  status: '',\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return {\n        ...state,\n        postData: [\n          ...state.postData,\n          { id: Date.now(), message: action.newPostText, likesCount: 0 },\n        ],\n      };\n      case DELETE_POST:\n        return {\n... state,\npostData: state.postData.filter(i => i.id !== action.postId)\n        };\n    case SET_USER_PROFILE:\n      return {\n        ...state,\n        profile: action.profile,\n      };\n    case SET_STATUS:\n      return {\n        ...state,\n        status: action.status,\n      };\n      case UPDATE_MY_STATUS:\n          return {\n              ...state,\n              status: action.status\n          }\n    default:\n      return state;\n  }\n};\n\n// AC\nexport const addPostAC = (newPostText) => ({ type: ADD_POST, newPostText });\nexport const deletePostAC = (postId) => ({type: DELETE_POST, postId})\n\nconst setUserProfileData = (profile) => ({ type: SET_USER_PROFILE, profile });\nconst setProfileStatus = (status) => ({ type: SET_STATUS, status });\nconst updateMyStatus = (status) => ({ type: UPDATE_MY_STATUS, status})\n\n// Thunk\nexport const setUserProfile = (userId) => {\n  return (dispatch) => {\n    usersAPI.getProfile(userId).then((response) => {\n      dispatch(setUserProfileData(response.data));\n    });\n  };\n};\n\nexport const setStatus = (userId) => {\n  return (dispatch) => {\n    profileAPI.getStatus(userId).then((response) => {\n      dispatch(setProfileStatus(response.data));\n    });\n  };\n};\nexport const updateStatus = (status) => {\n    return (dispatch => {\n        profileAPI.updateStatus(status).then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(updateMyStatus(status))\n            }\n        })\n    })\n}\n\nexport default profileReducer;\n","const SEND_MESSAGE = 'ADD-MESSAGE';\n\nlet initialState = {\n  dialogsData: [\n    { id: 1, name: 'Luba' },\n    { id: 2, name: 'Olga' },\n    { id: 3, name: 'Nicholas' },\n  ],\n  messagesData: [\n    { id: 1, message: 'Hi there!' },\n    { id: 2, message: 'How are you?' },\n    { id: 3, message: 'Hello everybody!' },\n  ],\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEND_MESSAGE:\n      let newMessage = action.newMessageBody;\n      return {\n        ...state,\n        messagesData: [\n          ...state.messagesData,\n          { id: Date.now(), message: newMessage },\n        ],\n      };\n\n    default:\n      return state;\n  }\n};\n\n// AC\nexport const sendMessageAC = (newMessageBody) => ({\n  type: SEND_MESSAGE,\n  newMessageBody,\n});\n\nexport default dialogsReducer;\n","let initialState = {};\n\nconst sideBarReducer = (state = initialState, action) => {\n\n    return state;\n};\n\nexport default sideBarReducer;","import { stopSubmit } from 'redux-form';\nimport { usersAPI, authAPI } from '../Components/api/api';\n\nconst SET_USER_DATA = 'SET_USER_DATA';\n\nconst initialState = {\n  id: null,\n  email: null,\n  login: null,\n  isAuth: false,\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return {\n        ...state,\n        ...action.data,\n        //isAuth: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setAuthMeData = (id, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  data: { id, email, login, isAuth },\n});\n\n//if I autorized give me my data: id, email, login \nexport const setAuthUserData = () => {\n  return (dispatch) => {\n    return authAPI.authMe().then((response) => {\n      if (response.data.resultCode === 0) {\n        let { id, email, login } = response.data.data;\n        dispatch(setAuthMeData(id, email, login, true));\n      }\n    });\n  };\n};\n\nexport const login = (email, password, rememberMe) => {\n  return (dispatch) => {\n    authAPI.logIn(email, password, rememberMe).then((response) => {\n      if (response.data.resultCode === 0) {\n        authAPI.authMe().then((response) => {\n          if (response.data.resultCode === 0) {\n            let { id, email, login } = response.data.data;\n            dispatch(setAuthMeData(id, email, login, true));\n          }\n        });\n      } else {\n        let message =\n          response.data.messages.length > 0\n            ? response.data.messages[0]\n            : 'Some error';\n        dispatch(stopSubmit('login', { _error: message }));\n      }\n    });\n  };\n};\n\nexport const logout = () => {\n  return (dispatch) => {\n    authAPI.logOut().then((response) => {\n      if (response.data.resultCode === 0) {\n        dispatch(setAuthMeData(null, null, null, false));\n      }\n    });\n  };\n};\n\nexport default authReducer;\n","\nimport {setAuthUserData} from './auth-reducer';\nconst INIT_SUCCESS = 'INIT_SUCCESS';\nconst initial = {\n    initialized: false\n}\n\nconst appReducer = (state = initial, action) => {\nswitch (action.type) {\n    case INIT_SUCCESS:\n        return {\n            ...state,\n            initialized: true\n        }\n\n    default:\n        return state;\n}\n};\n\nconst initAC = () => ({ type: INIT_SUCCESS});\n\n//\nexport const initApp = () => dispatch => {\n   let  promise = dispatch(setAuthUserData())\n   Promise.all([promise])\n   .then(() => dispatch(initAC()))\n\n}\n\nexport default appReducer;","import { applyMiddleware, combineReducers, createStore, compose } from 'redux';\nimport profileReducer from './profile-reducer';\nimport dialogsReducer from './dialogs-reducer';\nimport sideBarReducer from './sideBar-reducer';\nimport usersReducer from './users-reducer';\nimport authReducer from './auth-reducer';\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form';\nimport appReducer from './app-reducer';\n\nlet reducers = combineReducers({\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  sidebar: sideBarReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  form: formReducer,\n  app: appReducer,\n});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(thunkMiddleware)\n  ));\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nwindow.__store__ = store;\n\nexport default store;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Header.module.css';\n\nconst Header = (props) => {\n    \n  return (\n    <div className={s.header}>\n      <img alt='logo'/>\n      <div className={s.txt}>Header</div>\n      <div className={s.loginBlock}>\n        <div>\n          {props.isAuth \n          ? <div>{props.login} - <button onClick={props.logout}>log out</button></div>\n          : <NavLink to='/login'> Login </NavLink>\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport { setAuthUserData, logout } from '../../Redux/auth-reducer';\n\nclass HeaderContainer extends React.Component {\n\n  render() {\n    return <Header {...this.props} />;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    login: state.auth.login,\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default connect(mapStateToProps, { setAuthUserData, logout })(HeaderContainer);\n","import React from \"react\";\nimport s from './NavBar.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst NavBar = () => {\n    return (\n        <div className={s.navbar}>\n\n            <div className={s.itemMenu}>\n\n                <div className={s.item}>\n                    <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to='/dialogs' activeClassName={s.active}>Messages</NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to='/news' activeClassName={s.active}>News</NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to='/settings' activeClassName={s.active}>Settings</NavLink>\n                </div>\n                <div>\n                    <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nexport default NavBar;","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport s from './ProfileInfo.module.css';\n\nconst StatusProfileHooks = (props) => {\n        \n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status])\n\n    const updateStatus = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n        return <div>\n            <div>\n                {\n                    !editMode &&\n                    <span onDoubleClick={() => setEditMode(true)}\n                    className={s.status}>\n                    Status: {props.status}\n                    </span>\n                }\n            </div>\n            <div>\n                {\n                    editMode && \n                    <input \n                    onBlur={updateStatus}\n                    autoFocus={true} type=\"text\" \n                    onChange={(e) => setStatus(e.currentTarget.value)}\n                    value={status}\n                    />\n                }\n            </div>\n        </div>\n    }\n\nexport default StatusProfileHooks;","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from '../../Common/Preloader/preloader';\nimport StatusProfileHooks from './StatusProfileHooks';\n\nconst ProfileInfo = (props) => {\n  if (!props.profile) {\n    return <Preloader loading={true} />;\n  } else {\n    return (\n        <div className={s.profile}>\n          <div>\n            <img src={props.profile.photos.large} alt='profile' />\n          </div>\n    \n          <div>\n            <p>Name: {props.profile.fullName}</p>\n          </div>\n          <StatusProfileHooks status={props.status} updateStatus={props.updateStatus}/>\n        </div>\n      );\n  }\n\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport s from './Post.module.css'\nconst Post = (props) => {\n    return (\n        <div className={s.item}>\n            <div className={s.ava}></div>\n            <div className={s.post}>\n                <p>{props.message}</p>\n            </div>\n            <div>\n                <button>like</button>\n                <span>{props.likesCount}</span>\n            </div>\n        </div>\n    );\n};\nexport default Post;","\n\nexport const required = value => !value ? 'Reqiured' : undefined;\n\nexport const maxLengthCreator = (maxLength) => (value)=> {\n return (value && value.length > maxLength \n    ? `Must be ${maxLength} characters or less` \n    : undefined);\n}; ","import React from 'react';\nimport s from './renderedField.module.css';\n\nexport const FormControl = ({input, meta, ...props}) => {\n    return (\n        <div className={meta.touched && meta.error ? s.formControl : ''}>\n            {props.children}\n            <div>\n            {meta.touched && meta.error && \n            <span className={s.error}>{meta.error}</span>}\n            </div>\n        </div>\n    )\n};   \n\nexport const Textarea = (props) => {\n    const {input, ...restProps} = props;\n    return (\n        <>\n        <FormControl {...props}>\n            <textarea {...input} placeholder={restProps.label} {...restProps}/>\n        </FormControl>\n        </>\n        \n    )\n};   \n\nexport const Input = (props) => {\n    const {input, type, restProps} = props;\n    return <>\n    <FormControl {...props}>\n            <input {...input} type={type} {...restProps}/>\n    </FormControl>\n    </>\n}","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm } from 'redux-form';\nimport {required, maxLengthCreator} from '../../utils/validator';\nimport { Textarea } from '../../Common/FormsControls/FormsControls';\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPosts = (props) => {\n\n  const submit = (formData) => {\n    props.addPostAC(formData.newPostText);\n  };\n\n  let postElements = [... props.postData].reverse().map((message) => (\n    <Post\n      message={message.message}\n      key={message.id}\n      likesCount={message.likesCount}\n    />\n  ));\n\n  return (\n    <div>\n      <div className={s.profileblock}>\n        <h3>My Posts</h3>\n        <PostReduxForm onSubmit={submit} />\n      </div>\n      <div className={s.posts}>{postElements}</div>\n    </div>\n  );\n};\n\nconst PostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <Field name='newPostText' component={Textarea} label='la-la'\n      validate={[required, maxLength10]}/>\n      <div className={s.btn}>\n        <button>Add Post</button>\n      </div>\n    </form>\n  );\n};\n\nconst PostReduxForm = reduxForm({ form: 'myPost' })(PostForm);\n\nexport default MyPosts;\n","import {addPostAC} from \"../../../Redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        postData: state.profilePage.postData\n    }\n};\n\nconst MyPostsContainer = connect(mapStateToProps, {addPostAC})(MyPosts);\n\nexport default MyPostsContainer;","import React from \"react\";\nimport s from './Profile.module.css'\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport {connect} from \"react-redux\";\nimport {setUserProfile, setStatus, updateStatus} from \"../../Redux/profile-reducer\";\nimport {  withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\n\n\nclass Profilecontainer extends React.Component {\n\n    componentDidMount() {\n        \n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n        this.props.setUserProfile(userId);\n        this.props.setStatus(userId)\n\n    }\n\n    render() {\n       \n        return (\n            <div className={s.profile}>\n                <ProfileInfo {...this.props}/>\n                <MyPostsContainer />\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        isAuth: state.auth.isAuth,\n        authorizedUserId: state.auth.id\n    }\n};\nconst objectForMapDispatch = {\n    setUserProfile,\n    setStatus,\n    updateStatus\n};\n\n\nexport default compose(\n   // withAuthRedirect,\n   withRouter,\n    connect(mapStateToProps, objectForMapDispatch)\n    \n)(Profilecontainer);","import React from \"react\";\nimport s from './News.module.css'\n\nconst News = (props) => {\n    return (\n        <div className={s.item}>\n           News\n        </div>\n    );\n};\n\nexport default News;","import React from \"react\";\nimport s from './Settings.module.css'\nconst Settings = () => {\n    return (\n        <div className={s.item}>\n           Settings\n        </div>\n    )\n};\n\nexport default Settings;","import React from \"react\";\nimport s from './../Dialogs.module.css'\nimport {NavLink} from \"react-router-dom\";\n\n\nconst DialogItem  = (props) => {\n    return <div className={s.dialog}>\n        <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\n    </div>\n};\n\n\nexport default DialogItem;","import React from \"react\";\nimport s from './../Dialogs.module.css'\n\n\n\n\nconst Message = (props) => {\n    return <div className={s.item}>{props.message}</div>\n};\n\n\nexport default Message;","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { Field, reduxForm } from 'redux-form';\nimport { Textarea } from '../Common/FormsControls/FormsControls';\nimport { maxLengthCreator, required } from '../utils/validator';\n\nconst Dialogs = (props) => {\n\n  let state = props.dialogsPage;\n\n  const submit = (formData) => {\n    props.sendMessageAC(formData.newMessageBody);\n  };\n  //create elements on page\n  let dialogsElement = state.dialogsData.map((dialog) => (\n    <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />\n  ));\n  let messagesElements = state.messagesData.map((message) => (\n    <Message key={message.id} message={message.message} />\n  ));\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>{dialogsElement}</div>\n      <div className={s.messages}>{messagesElements}</div>\n\n      <div className={s.sendMessageBlock}>\n        <AddMessageFormRedux onSubmit={submit} />\n      </div>\n    </div>\n  );\n};\n\n//maxLength  необх создавать за пределами комп из-за перерисовки\nconst maxLength15 = maxLengthCreator(15)\nconst AddMessageForm = (props) => {\n\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div className={s.textarea}>\n        <Field\n          name='newMessageBody'\n          component={Textarea}\n          validate={[required, maxLength15]}\n          label='Enter your message'\n        />\n      </div>\n      <div className={s.sendMessage}>\n        <button>Send Message</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(\n  AddMessageForm\n);\nexport default Dialogs;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\n \nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n};\n\nconst withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login'/>\n            return <Component {...this.props}/>\n        }\n    }\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\n    return ConnectedAuthRedirectComponent;\n};\n\nexport default withAuthRedirect;\n\n","import { sendMessageAC } from '../../Redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport withAuthRedirect from '../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nconst mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n  };\n};\n// let mapDispatchToProps = (dispatch) => {\n//   return {\n//     sendMessage: (newMessageBody) =>\n//       dispatch(sendMessageAC(newMessageBody)),\n//   };\n// };\n\nexport default compose(\n  connect(mapStateToProps, {sendMessageAC}),\n  withAuthRedirect\n)(Dialogs);\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport { Input } from '../Common/FormsControls/FormsControls';\nimport { required } from '../utils/validator';\nimport { login } from '../../Redux/auth-reducer';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport s from '../Common/FormsControls/renderedField.module.css';\n\nconst Login = (props) => {\n//debugger\n    const myHandleSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe)\n    }\n  return (\n    <div>\n      {props.isAuth\n      ? <Redirect to='/dialogs'/>\n      : <div><h2>Login</h2>\n      <LoginReduxForm onSubmit={myHandleSubmit}/></div>\n      }\n      \n    </div>\n  );\n};\n\nconst LoginForm = (props) => {\n    \n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <label htmlFor=\"email\">login:</label>\n      <Field name='email' component={Input} validate={[required]} type='text' placeholder='login'/>\n      </div>\n      <div>\n        <label htmlFor=\"password\">password:</label>\n        <Field name='password' component={Input} validate={[required]} type='password' placeholder='password'/>\n      </div>\n      <div>\n        <Field name='rememberMy' component={Input} type='checkbox' />remember me\n      </div>\n      {\n        props.error && <div className={s.commonErrorLoginForm}>\n        {props.error}\n      </div>\n      }\n      <button>Log in</button>\n    </form>\n  );  \n};\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\n\nconst mapState = (state) => ({\n  isAuth: state.auth.isAuth\n})\nexport default connect(mapState, {login})(Login);\n","import React, { Suspense } from 'react';\n\n\n\nconst withSuspense = (Component) => {\n    return (props) => {\n        return (\n            <>\n            <Suspense fallback={<div>Loading...</div>}>\n            <Component {...props}/>\n            </Suspense>\n            </>\n        )\n    };\n};\n\nexport default withSuspense;\n\n","import React, { Suspense } from 'react';\nimport './App.css';\nimport HeaderContainer from './Components/Header/HeaderContainer';\nimport NavBar from './Components/NavBar/NavBar';\nimport ProfilecontainerConnect from './Components/Profile/Profile';\nimport { Route, withRouter } from 'react-router-dom';\nimport News from './Components/News/News';\nimport Settings from './Components/Settings/Settings';\nimport DialogsContainer from './Components/Dialogs/DialogsContainer';\nimport Login from './Components/Login/login';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { initApp } from './Redux/app-reducer';\nimport Preloader from './Components/Common/Preloader/preloader';\nimport withSuspense from './Components/hoc/withSuspense';\nconst UsersContainerConnect = React.lazy(() => import('./Components/Users/UsersContainerConnect'));\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initApp()\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader/>\n    }\n  return (\n    <div className='app-wrapper'>\n      <HeaderContainer />\n      <NavBar />\n      <div className='app-wrapper-content'>\n        <Route\n          path='/profile/:userId?'\n          render={() => <ProfilecontainerConnect />}\n        />\n        <Route path='/dialogs' render={() => <DialogsContainer />} />\n        <Route path='/news' component={News} />\n        <Route path='/settings' component={Settings} />\n        <Route path='/users' render={withSuspense(UsersContainerConnect)} />\n        <Route path='/login' render={() => <Login/>}/>\n      </div>\n    </div>\n  );\n}\n}\nconst mapState = (state) => ({\n  initialized: state.app.initialized\n})\n\nexport default compose(withRouter, connect(mapState, {initApp}))(App);\n","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./Redux/redux-store\";\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\n\n    ReactDOM.render(\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>,\n        document.getElementById('root')\n    )\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"renderedField_error__1h6jQ\",\"formControl\":\"renderedField_formControl__1yKR8\",\"commonErrorLoginForm\":\"renderedField_commonErrorLoginForm__3kcYy\"};","import React from \"react\";\nimport s from \"./Preloader.module.css\";\n\nconst Preloader = (props) => {\n\n    return <div className={ props.loading ? s.ldsRing : ''}>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n};\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__3OR6I\",\"status\":\"ProfileInfo_status__2-fls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1CGKd\",\"txt\":\"Header_txt__3YgDD\",\"loginBlock\":\"Header_loginBlock__2dPsT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileblock\":\"MyPosts_profileblock__1ffGu\",\"btn\":\"MyPosts_btn__10BYB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"Post_ava__3aJBn\",\"item\":\"Post_item__2BJYU\",\"post\":\"Post_post__3WAzQ\"};"],"sourceRoot":""}